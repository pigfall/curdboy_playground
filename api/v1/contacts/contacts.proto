// Code generated by entproto. DO NOT EDIT.
syntax = "proto3";

package contacts;

import "google/api/annotations.proto";

import "google/protobuf/empty.proto";

import "google/protobuf/wrappers.proto";

import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/pigfall/curdboy_playground/api/v1/contacts";

message Car {
  string car_id = 1 [json_name = "car_id"];

  google.protobuf.StringValue user_id = 2 [json_name = "user_id"];
}

message Dept {
  string dept_id = 1 [json_name = "dept_id"];
}

message User {
  string user_id = 1 [json_name = "user_id"];

  google.protobuf.StringValue phone = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description:"\346\211\213\346\234\272\345\217\267"  }];

  Race race = 3;

  enum Race {
    RACE_UNSPECIFIED = 0;

    YELLOW = 1;

    WHITE = 2;

    BLACK = 3;
  }
}

message CarId {
  string car_id = 1 [json_name = "car_id"];
}

message DeptId {
  string dept_id = 1 [json_name = "dept_id"];
}

message UserId {
  string user_id = 1 [json_name = "user_id"];
}

message CountNumber {
  int32 value = 1;
}

message Cars {
  repeated Car data_list = 1 [json_name = "data_list"];
}

message CarWithCount {
  google.protobuf.Int32Value data_count = 1 [json_name = "data_count"];

  repeated Car Cars = 2;
}

message CarIdAndUserId {
  string car_id = 1 [json_name = "car_id"];

  string user_id = 2 [json_name = "user_id"];
}

message CarPageQuery {
  string car_id = 1 [json_name = "car_id"];

  google.protobuf.StringValue user_id = 2 [json_name = "user_id"];

  int32 page_index = 3 [json_name = "page_index"];

  int32 page_size = 4 [json_name = "page_size"];

  google.protobuf.BoolValue page_data_count = 5 [json_name = "page_data_count"];
}

message Depts {
  repeated Dept data_list = 1 [json_name = "data_list"];
}

message DeptWithCount {
  google.protobuf.Int32Value data_count = 1 [json_name = "data_count"];

  repeated Dept Depts = 2;
}

message DeptIdAndUserId {
  string dept_id = 1 [json_name = "dept_id"];

  string user_id = 2 [json_name = "user_id"];
}

message DeptAddUserReq {
  string user_id = 1 [json_name = "user_id"];

  google.protobuf.StringValue phone = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description:"\346\211\213\346\234\272\345\217\267"  }];

  Race race = 3;

  string dept_id = 4 [json_name = "dept_id"];

  enum Race {
    RACE_UNSPECIFIED = 0;

    YELLOW = 1;

    WHITE = 2;

    BLACK = 3;
  }
}

message DeptRemoveUserReq {
  string user_id = 1 [json_name = "user_id"];

  google.protobuf.StringValue phone = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description:"\346\211\213\346\234\272\345\217\267"  }];

  int32 page_index = 3 [json_name = "page_index"];

  int32 page_size = 4 [json_name = "page_size"];

  string dept_id = 5 [json_name = "dept_id"];
}

message DeptFindUsersReq {
  string user_id = 1 [json_name = "user_id"];

  google.protobuf.StringValue phone = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description:"\346\211\213\346\234\272\345\217\267"  }];

  int32 page_index = 3 [json_name = "page_index"];

  int32 page_size = 4 [json_name = "page_size"];

  string dept_id = 5 [json_name = "dept_id"];
}

message DeptFindUsersRes {
  int32 data_count = 1 [json_name = "data_count"];

  repeated User Users = 2;
}

message DeptPageQuery {
  string dept_id = 1 [json_name = "dept_id"];

  int32 page_index = 2 [json_name = "page_index"];

  int32 page_size = 3 [json_name = "page_size"];

  google.protobuf.BoolValue page_data_count = 4 [json_name = "page_data_count"];
}

message Users {
  repeated User data_list = 1 [json_name = "data_list"];
}

message UserWithCount {
  google.protobuf.Int32Value data_count = 1 [json_name = "data_count"];

  repeated User Users = 2;
}

message UserIdAndCarId {
  string user_id = 1 [json_name = "user_id"];

  string car_id = 2 [json_name = "car_id"];
}

message UserRemoveCarReq {
  string car_id = 1 [json_name = "car_id"];

  int32 page_index = 2 [json_name = "page_index"];

  int32 page_size = 3 [json_name = "page_size"];

  string user_id = 4 [json_name = "user_id"];
}

message UserFindCarsReq {
  string car_id = 1 [json_name = "car_id"];

  int32 page_index = 2 [json_name = "page_index"];

  int32 page_size = 3 [json_name = "page_size"];

  string user_id = 4 [json_name = "user_id"];
}

message UserFindCarsRes {
  int32 data_count = 1 [json_name = "data_count"];

  repeated Car Cars = 2;
}

message UserIdAndDeptId {
  string user_id = 1 [json_name = "user_id"];

  string dept_id = 2 [json_name = "dept_id"];
}

message UserAddDeptReq {
  string dept_id = 1 [json_name = "dept_id"];

  string user_id = 2 [json_name = "user_id"];
}

message UserFindDeptsReq {
  string dept_id = 1 [json_name = "dept_id"];

  int32 page_index = 2 [json_name = "page_index"];

  int32 page_size = 3 [json_name = "page_size"];

  string user_id = 4 [json_name = "user_id"];
}

message UserFindDeptsRes {
  int32 data_count = 1 [json_name = "data_count"];

  repeated Dept Depts = 2;
}

message UserPageQuery {
  string user_id = 1 [json_name = "user_id"];

  google.protobuf.StringValue phone = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { description:"\346\211\213\346\234\272\345\217\267"  }];

  Race race = 3;

  int32 page_index = 4 [json_name = "page_index"];

  int32 page_size = 5 [json_name = "page_size"];

  google.protobuf.BoolValue page_data_count = 6 [json_name = "page_data_count"];

  enum Race {
    RACE_UNSPECIFIED = 0;

    YELLOW = 1;

    WHITE = 2;

    BLACK = 3;
  }
}

service CarService {
  rpc Create ( Car ) returns ( CarId ) {
    option (google.api.http) = { post:"/cars" body:"*"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Create Car"  };
  }

  rpc Update ( Car ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { patch:"/cars/{car_id}" body:"*"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Update Car"  };
  }

  rpc Delete ( CarId ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/cars/{car_id}"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Delete Car"  };
  }

  rpc FindById ( CarId ) returns ( Car ) {
    option (google.api.http) = { get:"/cars/{car_id}"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"FindById Car"  };
  }

  rpc Find ( CarPageQuery ) returns ( CarWithCount ) {
    option (google.api.http) = { get:"/cars"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Find Car"  };
  }

  rpc Count ( Car ) returns ( CountNumber ) {
    option (google.api.http) = { get:"/cars/cars/count"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Count Car"  };
  }
}

service DeptService {
  rpc Create ( Dept ) returns ( DeptId ) {
    option (google.api.http) = { post:"/depts" body:"*"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Create Dept"  };
  }

  rpc Update ( Dept ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { patch:"/depts/{dept_id}" body:"*"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Update Dept"  };
  }

  rpc Delete ( DeptId ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/depts/{dept_id}"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Delete Dept"  };
  }

  rpc FindById ( DeptId ) returns ( Dept ) {
    option (google.api.http) = { get:"/depts/{dept_id}"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"FindById Dept"  };
  }

  rpc Find ( DeptPageQuery ) returns ( DeptWithCount ) {
    option (google.api.http) = { get:"/depts"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Find Dept"  };
  }

  rpc Count ( Dept ) returns ( CountNumber ) {
    option (google.api.http) = { get:"/depts/depts/count"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Count Dept"  };
  }

  rpc AddUser ( DeptAddUserReq ) returns ( UserId ) {
    option (google.api.http) = { post:"/depts/{dept_id}/users" body:"*"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Add User to Dept"  };
  }

  rpc AddUserById ( DeptIdAndUserId ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/depts/{dept_id}/users/{user_id}"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Add User to Dept by id"  };
  }

  rpc RemoveUser ( DeptRemoveUserReq ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/depts/{dept_id}/users"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Remove User from Dept by id"  };
  }

  rpc FindUsers ( DeptFindUsersReq ) returns ( DeptFindUsersRes ) {
    option (google.api.http) = { get:"/depts/{dept_id}/users"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Get the User of Dept"  };
  }
}

service UserService {
  rpc Create ( User ) returns ( UserId ) {
    option (google.api.http) = { post:"/users" body:"*"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Create User"  };
  }

  rpc Update ( User ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { patch:"/users/{user_id}" body:"*"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Update User"  };
  }

  rpc Delete ( UserId ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/users/{user_id}"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Delete User"  };
  }

  rpc FindById ( UserId ) returns ( User ) {
    option (google.api.http) = { get:"/users/{user_id}"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"FindById User"  };
  }

  rpc Find ( UserPageQuery ) returns ( UserWithCount ) {
    option (google.api.http) = { get:"/users"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Find User"  };
  }

  rpc Count ( User ) returns ( CountNumber ) {
    option (google.api.http) = { get:"/users/users/count"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Count User"  };
  }

  rpc AddCar ( Car ) returns ( CarId ) {
    option (google.api.http) = { post:"/users/{user_id}/cars" body:"*"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Add Car to User"  };
  }

  rpc AddCarById ( UserIdAndCarId ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/users/{user_id}/cars/{car_id}"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Add Car to User by id"  };
  }

  rpc RemoveCar ( UserRemoveCarReq ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/users/{user_id}/cars"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Remove Car from User by id"  };
  }

  rpc FindCars ( UserFindCarsReq ) returns ( UserFindCarsRes ) {
    option (google.api.http) = { get:"/users/{user_id}/cars"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Get the Car of User"  };
  }

  rpc FindDepts ( UserFindDeptsReq ) returns ( UserFindDeptsRes ) {
    option (google.api.http) = { get:"/users/{user_id}/depts"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Get the Dept of User"  };
  }
}
